events { }

http {
server {
    listen 80;
    server_name localhost;

    root /var/www/html;
    index index.php index.html;

    # Existing PHP handling
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_pass php-fpm:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }

    # New route for bypassing PHP and going directly to Deno
    location /bust {
        # Remove the /deno-direct prefix before proxying
        rewrite ^/bust(/.*)$ $1 break;
        proxy_pass http://deno-fallback:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Existing fallback route if PHP or file is not found
    location @deno_fallback {
        proxy_pass http://deno-fallback:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Handle 404 errors by forwarding to Deno server
    error_page 404 /error-404;
    location /error-404 {
        proxy_pass http://deno-fallback:8000;
    }
}

}